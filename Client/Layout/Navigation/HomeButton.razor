@using Client.Enums
@using Page = Client.Enums.Nav

<div class="d-sm-none">
	<a class="@cssClass" title="<576px Xs | @cssClass" href="@Page.Home.Index">
		<i class="@Page.Home.Icon"></i>
	</a>
</div>


<div class="d-none d-sm-block d-md-none d-lg-none d-xl-none">
	<a class="@cssClass" title="≥576px Sm | @cssClass" href="@Page.Home.Index">
		<i class="@Page.Home.Icon"></i>
	</a>
</div>

<div class="d-none d-md-block d-lg-none d-xl-none">
	<a class="@cssClass " title="≥768px Md | @cssClass" href="@Page.Home.Index">
		<i class="@Page.Home.Icon"></i>
	</a>
</div>

<div class="d-none d-lg-block d-xl-none">
	<a class="@cssClass " title="≥992px Lg | @cssClass" href="@Page.Home.Index">
		<i class="@Page.Home.Icon"></i>
	</a>
</div>

<div class="d-none d-xl-block">
	<a class="@cssClass " title="≥1200px Xl | @cssClass" href="@Page.Home.Index">
		<i class="@Page.Home.Icon"></i>
	</a>
</div>


@code {
	[Parameter]	public string? ButtonColor { get; set; } 
	[Parameter] public string? ButtonSize { get; set; } 
	[Parameter, EditorRequired] public MediaQuery? MediaQuery { get; set; }
	[Parameter, EditorRequired] public bool DarkMode { get; set; }

	protected string? cssClass;

	protected override void OnParametersSet()
	{
		string color; 
		color = (DarkMode) ? Anchors.BtnColors.Dark : Anchors.BtnColors.Secondary;

		if (MediaQuery == MediaQuery.Xs | MediaQuery == MediaQuery.Sm)
		{
			//cssClass = $"btn {ButtonColor ?? Anchors.BtnColors.Secondary} {ButtonSize ?? Anchors.BtnSize.Sm}";
			cssClass = $"btn {color} {ButtonSize ?? Anchors.BtnSize.Sm}";
		}
		else
		{
			//cssClass = $"btn {ButtonColor ?? Anchors.BtnColors.Secondary} {ButtonSize ?? Anchors.BtnSize.Lg}";
			cssClass = $"btn {color} {ButtonSize ?? Anchors.BtnSize.Lg}";
		}
	}

	/*
		ToDo: what's special about this ... `navbar-brand nav-link`

		[Parameter] public string? Title { get; set; } // = Meta.Acronym  Page.Home.Acronym
		protected string? title = Meta.Acronym;
	*/

	// 
}
