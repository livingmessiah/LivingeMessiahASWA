@using Client.Enums
@using Client.Layout.Navigation

<div class="d-flex bg-warning-subtle">
	<div class="p-1">
		<HomeButton CssClass="@cssHomeButtonClass" />
	</div>

	@if (MediaQuery!.Value == @MediaQuery.Xs)
	{
		<div class="p-1 flex-grow-1">
			<SearchForm />
		</div>
		<div class="">
			<ToggleCollapseXs>
				<AnchorButtons />
			</ToggleCollapseXs>
		</div>
	}
	else
	{
		<div class="p-1 flex-grow-1">
			<SearchForm />
		</div>
		<div class="p-1">
			<AnchorButtonsSmMdLgXl CssClass="@cssAnchorButtonsClass" />
		</div>
	}


</div>

@code {
	[Parameter, EditorRequired] public MediaQuery? MediaQuery { get; set; }
	[Parameter] public string? ButtonColor { get; set; }
	[Parameter] public string? ButtonSize { get; set; }

	protected string? cssHomeButtonClass;
	protected string? cssAnchorButtonsClass;

	protected override void OnParametersSet()
	{
		if (MediaQuery == MediaQuery.Xs | MediaQuery == MediaQuery.Sm)
		{
			cssHomeButtonClass = $"btn {Anchors.BtnColors.Secondary} {ButtonSize ?? Anchors.BtnSize.Sm}";
		}
		else
		{
			cssHomeButtonClass = $"btn {Anchors.BtnColors.Secondary} {ButtonSize ?? Anchors.BtnSize.Lg}";
		}


		if (MediaQuery == MediaQuery.Sm)
		{
			cssAnchorButtonsClass = $"btn {ButtonColor ?? Anchors.BtnColors.Secondary} {ButtonSize ?? Anchors.BtnSize.Sm}";
		}
		else
		{
			if (MediaQuery != MediaQuery.Xs)
			{
			cssAnchorButtonsClass = $"btn {ButtonColor ?? Anchors.BtnColors.Secondary} {ButtonSize ?? Anchors.BtnSize.Lg}";		
			}
		}
	}
}
